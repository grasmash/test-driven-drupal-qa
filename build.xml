<?xml version="1.0" encoding="UTF-8"?>

<project name="Drupal" default="build-full">

  <property name="sites-dir" value="${basedir}/sites/all/modules"/>
  <property name="bin-dir" value="${basedir}/vendor/bin"/>
  <property name="log-dir" value="${basedir}/build/logs"/>
  <property name="strict" value="false"/>
  <property file="${basedir}/build.properties"/>

  <macrodef name = "git">
    <attribute name = "command" />
    <attribute name = "dir" default = "" />
    <element name = "args" optional = "true" />
    <sequential>
      <echo message = "git @{command}" />
      <exec executable = "git" dir = "@{dir}">
        <arg value = "@{command}" />
        <args/>
      </exec>
    </sequential>
  </macrodef>

  <!-- PHP files -->
  <patternset id="php">
    <include name="**/*.php" />
    <include name="**/*.module" />
    <include name="**/*.install" />
    <include name="**/*.inc" />
    <include name="**/*.profile" />
    <include name="**/*.test" />
  </patternset>

  <!-- Javascript files -->
  <patternset id="js">
    <include name="**/*.js" />
    <!-- Minimized JavaScript files should not be analyzed.
         In their optimized state they can not be expected
         to conform to coding standards. -->
    <exclude name="**/*.min.js" />
  </patternset>

  <!-- CSS files -->
  <patternset id="css">
    <include name="**/*.css" />
  </patternset>

    <!-- SCSS/SASS files -->
  <patternset id="sass">
    <include name="**/*.scss" />
    <include name="**/*.sass" />
  </patternset>

  <!-- Directories for community contributed code. We exclude these from
       code analysis as we cannot be held responsible for any problems
       here. -->
  <patternset id="contrib">
    <exclude name="**/contrib/**/*.*" />
    <exclude name="**/libraries/**/*.*" />
  </patternset>

  <!-- We exclude generated files from We exclude these from code analysis
       as we cannot be held responsible for any problems here. -->
  <patternset id="generated">
    <exclude name="**/*.features.*" />
    <exclude name="**/*.field_group.inc" />
    <exclude name="**/*.layouts.inc" />
    <exclude name="**/*.pages_default.inc" />
    <exclude name="**/*.panels_default.inc" />
    <exclude name="**/*.strongarm.inc" />
    <exclude name="**/*.views_default.inc" />
  </patternset>

  <!-- All PHP files -->
  <fileset id="src.php" dir="${basedir}/docroot">
    <patternset refid="php"/>
  </fileset>

  <!-- Custom PHP files -->
  <fileset id="src.php.custom" dir="${sites-dir}">
    <patternset refid="php"/>
    <patternset refid="contrib"/>
    <patternset refid="generated"/>
  </fileset>

  <!-- All javascript files -->
  <fileset id="src.js" dir="${sites-dir}">
    <patternset refid="js" />
  </fileset>

  <!-- Custom javascript files -->
  <fileset id="src.js.custom" dir="${sites-dir}">
    <patternset refid="js" />
    <patternset refid="contrib" />
  </fileset>

  <!-- All CSS files -->
  <fileset id="src.css" dir="${sites-dir}">
    <patternset refid="css" />
  </fileset>

  <!-- Custom CSS files -->
  <fileset id="src.css.custom" dir="${sites-dir}">
    <patternset refid="css" />
    <patternset refid="contrib" />
  </fileset>

  <!-- All SCSS/SASS files -->
  <fileset id="src.sass" dir="${sites-dir}">
    <patternset refid="sass" />
  </fileset>

  <!-- Custom SCSS/SASS files -->
  <fileset id="src.sass.custom" dir="${sites-dir}">
    <patternset refid="sass" />
    <patternset refid="contrib" />
  </fileset>

  <target name="build-full"
    depends="prepare,lint,composer,behat,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpcb"/>

  <target name="build-parallel"
    depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

  <target name="build-analysis"
    depends="prepare,tools-parallel"/>

  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
      <sequential>
        <antcall target="pdepend"/>
        <antcall target="phpmd-ci"/>
      </sequential>
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
      <antcall target="phploc"/>
    </parallel>
  </target>

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${basedir}/build/api"/>
    <delete dir="${basedir}/build/code-browser"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/pdepend"/>
    <delete dir="${basedir}/build/behat"/>
    <delete dir="${log-dir}"/>
  </target>

  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/code-browser"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/build/phpdox"/>
    <mkdir dir="${basedir}/build/behat"/>
    <mkdir dir="${log-dir}"/>
  </target>

  <target name="drupalcs-check" depends="prepare">
    <available file="${basedir}/build/coder/coder_sniffer/Drupal/ruleset.xml" property="drupalcs.present"/>
  </target>

  <target name="drupalcs-download" depends="drupalcs-check" unless="drupalcs.present">
    <git command = "clone">
      <args>
        <arg value = "http://git.drupal.org/project/coder.git" />
        <arg value = "build/coder" />
      </args>
    </git>
  </target>

  <target name="composer-check" depends="prepare">
    <available file="${basedir}/build/composer.phar" property="composer.present"/>
  </target>

  <target name="composer-download" depends="composer-check" unless="composer.present">
    <get src="https://getcomposer.org/composer.phar" dest="${basedir}/build/composer.phar"/>
  </target>

  <target name="composer" depends="composer-check,composer-download" description="Run composer update">
    <exec executable="php" failonerror="${strict}">
      <arg line="${basedir}/build/composer.phar update -o -vvv --profile"/>
    </exec>
  </target>

  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="${strict}">
      <arg value="-l" />

      <fileset refid="src.php.custom" />

      <fileset dir="${basedir}/tests">
        <include name="**/*.php" />
        <exclude name="vendor/**" />
        <modified />
      </fileset>
    </apply>
  </target>

  <target name="phpunit" description="Run unit tests with PHPUnit">
    <exec executable="${bin-dir}/phpunit" failonerror="${strict}"/>
  </target>

  <target name="behat" depends="composer" description="Behat tests">
    <exec dir="${basedir}/tests" executable="${bin-dir}/behat" failonerror="${strict}">
      <arg line="--format junit --config ${basedir}/tests/behat/test.yml --out ${basedir}/build/behat" />
    </exec>
  </target>

  <target name="phploc" depends="composer" description="Measure project size using PHPLOC">
    <exec executable="${bin-dir}/phploc">
      <arg value="--log-csv" />
      <arg value="${log-dir}/phploc.csv" />
      <arg path="${basedir}/docroot" />
    </exec>
  </target>

  <target name="pdepend" depends="composer"
    description="Calculate software metrics using PHP_Depend">
    <exec executable="${bin-dir}/pdepend">
      <arg value="--jdepend-xml=${log-dir}/jdepend.xml" />
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
      <arg path="${basedir}/docroot" />
    </exec>
  </target>

  <target name="phpmd" depends="composer"
    description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
    <pathconvert refid="src.php.custom" property="phpmd-src-custom" pathsep=","/>
    <exec executable="${bin-dir}/phpmd">
      <arg value="${phpmd-src-custom}"/>
      <arg value="text"/>
      <arg value="codesize,design,naming" />
    </exec>
  </target>

  <target name="phpmd-ci" depends="composer"
    description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
    <pathconvert refid="src.php.custom" property="phpmd-ci-src-custom" pathsep=","/>
    <exec executable="${bin-dir}/phpmd">
      <arg value="${phpmd-ci-src-custom}"/>
      <arg value="xml" />
      <arg value="codesize,naming,design" />
      <arg value="--reportfile" />
      <arg value="${log-dir}/pmd.xml" />
    </exec>
  </target>

  <target name="phpcs" depends="drupalcs-download,composer"
    description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <pathconvert refid="src.php.custom" property="phpcs-src-custom" pathsep=" "/>
    <exec dir="${basedir}" executable="${bin-dir}/phpcs">
      <arg value="-p --standard=${basedir}/build/coder/coder_sniffer/Drupal/ruleset.xml"/>
      <!-- For some reason this doesn't work if it's set to value -->
      <arg line="${phpcs-src-custom}"/>
    </exec>
  </target>

  <target name="phpcs-ci" depends="drupalcs-download,composer"
    description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <pathconvert refid="src.php.custom" property="phpcs-ci-src-custom" pathsep=" "/>
    <exec dir="${basedir}" executable="${bin-dir}/phpcs" output="/dev/null">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${log-dir}/checkstyle.xml" />
      <arg value="-p --standard=${basedir}/build/coder/coder_sniffer/Drupal/ruleset.xml"/>
      <arg line="${phpcs-ci-src-custom}"/>
    </exec>
  </target>

  <target name="phpcpd" depends="composer"
    description="Find duplicate code using PHPCPD">
    <pathconvert refid="src.php.custom" property="phpcpd-src-custom" pathsep=" "/>
    <exec executable="${bin-dir}/phpcpd">
      <arg value="--log-pmd" />
      <arg value="${log-dir}/pmd-cpd.xml" />
      <arg path="${basedir}/docroot" />
      <arg line="${phpcpd-src-custom}"/>
    </exec>
  </target>

  <target name="phpdox" depends="composer" description="Generate API documentation using phpDox">
    <exec executable="${bin-dir}/phpdox"/>
  </target>

  <target name="phpcb" depends="composer"
    description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="${bin-dir}/phpcb">
      <arg value="--log" />
      <arg path="${log-dir}" />
      <arg value="--source" />
      <arg path="${basedir}/docroot" />
      <arg value="--output" />
      <arg path="${basedir}/build/code-browser" />
    </exec>
  </target>

</project>
